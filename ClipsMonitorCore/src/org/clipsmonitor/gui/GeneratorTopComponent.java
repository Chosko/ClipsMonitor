/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.clipsmonitor.gui;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.clipsmonitor.gui//Generator//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GeneratorTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "map", openAtStartup = false)
@ActionID(category = "Window", id = "org.clipsmonitor.gui.GeneratorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GeneratorAction",
        preferredID = "GeneratorTopComponent"
)
@Messages({
    "CTL_GeneratorAction=Generator",
    "CTL_GeneratorTopComponent=Generator Window",
    "HINT_GeneratorTopComponent=This is a Generator window"
})
public final class GeneratorTopComponent extends TopComponent {

    private MenuPanelTopComponent menuPanel;
    private ScenePanelTopComponent ScenePanel;
    
    public GeneratorTopComponent() {
        initComponents();
        setName(Bundle.CTL_GeneratorTopComponent());
        setToolTipText(Bundle.HINT_GeneratorTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 852, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 960, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ScenePanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScenePanelMouseDragged
        //ottengo dal menuPanel lo state impostato dai radiobutton di scelta
        String state = menuPanel.getState();

        //ottengo le coordinate del click e le passo allo scenePanel
        int x = (int) evt.getPoint().getX();
        int y = (int) evt.getPoint().getY();
        ScenePanel.click(x, y, state);
    }//GEN-LAST:event_ScenePanelMouseDragged

    private void ScenePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScenePanelMouseClicked
        //ottengo dal menuPanel lo state impostato dai radiobutton di scelta
        String state = menuPanel.getState();

        //ottengo le coordinate del click e le passo allo scenePanel
        int x = (int) evt.getPoint().getX();
        int y = (int) evt.getPoint().getY();
        ScenePanel.click(x, y, state);
    }//GEN-LAST:event_ScenePanelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
